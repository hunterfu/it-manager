linux 网卡 绑定ip bonding 详解 

p实现

1、如果只是绑定同网段的ip，那就比较简单，步骤如下：

#cd /etc/sysconfig/network-scripts/

#cp ifcfg-eth0 ifcfg-eth0.1

    #vi ifcfg-eth0 （原eth0的配置）

    DEVICE=eth0

    BOOTPROTO=static

    IPADDR=192.168.18.2

    NETMASK=255.255.255.0

    NETWORK=192.168.18.0

    GETWAY=192.168.18.1

    ONBOOT=yes

    TYPE=Ethernet

配置 ifcfg-eth0.1

    #Vi ifcfg-eth0.1

    DEVICE=eth0:1

    BOOTPROTO=static

    IPADDR=192.168.18.3

    NETMASK=255.255.255.0

    NETWORK=192.168.18.0

    GETWAY=192.168.18.1

    ONBOOT=yes

    TYPE=Ethernet

最后 #service network restart

服务起来后192.168.18.3这个ip也生效了

2、为一台服务器配不同网络段的ip ,也就是将服务器网卡接口配置为trunk口,可以走不同的vlan

首先要找出服务器对应的两个交换机网口 （因为做bonding，要断掉一块网卡才能查到另外一块卡）

在找到对应端口后，在交换机上打上trunk，分配vlan tag id是 8和200

以上网络交换设置基本完成

其次下载 vlan http://www.candelatech.com/~greear/vlan.html

接下来对系统进行操作：可以写个脚本完成，以下脚本内容

#!/bin/sh

####加载8021q 网络协议模块

/sbin/modprobe 8021q

###为bond0 打vlan tag，其中 vlan是下载解包后的文件目录

/root/vlan/vconfig add bond0 200

/root/vlan/vconfig add bond0 8

###呵呵 单网卡配多ip

/sbin/ifconfig bond0.8 192.168.0.1 netmask 255.255.255.0 up

/sbin/ifconfig bond0.200 10.0.0.1 netmask 255.255.255.0 up

####规划路由策略

/sbin/route add -net 192.168.0.0/24 gw 192.168.0.1

/sbin/route delete default gw 192.168.0.254

/sbin/route add default gw 10.0.0.1

以上配置，理论上是不用从重起 network服务的，如不行，可重起查看一下问题所在。

二、多网卡单ip实现

这就是所谓Linunx网卡bonding，以下文章是偶摘抄的，唯一需要注意的四网卡的server做bonding的时候可能会存在bug，最下面俺将讲到如何处理该bug。

讨论一下bonding 的原理,什么是bonding需要从网卡的混杂(promisc)模式说起。我们知道，在正常情况下，网卡只接收目的硬件地址(MAC Address)是自身Mac的以太网帧，对于别的数据帧都滤掉，以减轻驱动程序的负担。但是网卡也支持另外一种被称为混杂promisc的模式，可以接 收网络上所有的帧，比如说tcpdump，就是运行在这个模式下。bonding也运行在这个模式下，而且修改了驱动程序中的mac地址，将两块网卡的 Mac地址改成相同，可以接收特定mac的数据帧。然后把相应的数据帧传送给bond驱动程序处理。
说了半天理论，其实配置很简单，一共四个步骤：
实验的操作系统是Redhat Linux Enterprise 3.0
绑定的前提条件：芯片组型号相同，而且网卡应该具备自己独立的BIOS芯片

1.编辑虚拟网络接口配置文件,指定网卡IP
vi /etc/sysconfig/ network-scripts/ ifcfg-bond0
[root@rhas-13 root]# cp /etc/sysconfig/network-scripts/ifcfg-eth0 ifcfg-bond0
2 #vi ifcfg-bond0
将第一行改成 DEVICE=bond0
# cat ifcfg-bond0
DEVICE=bond0
BOOTPROTO=none
IPADDR=192.168.0.1
NETMASK=255.255.255.0
NETWORK=192.168.0.0
BROADCAST=192.168.0.255
ONBOOT=yes
USERCTL=no
GATEWAY=192.168.0.254
这里要主意，不要指定单个网卡的IP 地址、子网掩码或网卡 ID。将上述信息指定到虚拟适配器(bonding)中即可。
[root@rhas-13 network-scripts]# cat ifcfg-eth0
DEVICE=eth0
BOOTPROTO=none
ONBOOT=yes
USERCTL=no
MASTER=bond0
SLAVE=yes

[root@rhas-13 network-scripts]# cat ifcfg-eth1
DEVICE=eth0
BOOTPROTO=none
ONBOOT=yes
USERCTL=no
MASTER=bond0
SLAVE=yes
3 # vi /etc/modules.conf
编辑 /etc/modules.conf 文件，以使系统在启动时加载bonding模块，对外虚拟网络接口设备为 bond0
加入下列两行
alias bond0 bonding
options bond0 miimon=100 mode=1
说明：miimon是用来进行链路监测的。 比如:miimon=100，那么系统每100ms监测一次链路连接状态，如果有一条线路不通就转入另一条线路；mode的值表示工作模式，他共有0，1,2,3四种模式，常用的为0,1两种。
mode=0表示load balancing (round-robin)为负载均衡方式，两块网卡都工作。
mode=1表示fault-tolerance (active-backup)提供冗余功能，工作方式是主备的工作方式,也就是说默认情况下只有一块网卡工作,另一块做备份.
bonding只能提供链路监测，即从主机到交换机的链路是否接通。如果只是交换机对外的链路down掉了，而交换机本身并没有故障，那么bonding会认为链路没有问题而继续使用

到这时已经配置完毕重新启动机器.
重启会看见以下信息就表示配置成功了
…………….
Bringing up interface bond0 OK
Bringing up interface eth0 OK
Bringing up interface eth1 OK
…………….

下面我们讨论以下mode分别为0,1时的情况
mode=1工作在主备模式下,这时eth1作为备份网卡是no arp的
[root@rhas-13 network-scripts]# ifconfig 验证网卡的配置信息
bond0 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING MASTER MULTICAST MTU:1500 Metric:1
RX packets:18495 errors:0 dropped:0 overruns:0 frame:0
TX packets:480 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:0
RX bytes:1587253 (1.5 Mb) TX bytes:89642 (87.5 Kb)

eth0 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING SLAVE MULTICAST MTU:1500 Metric:1
RX packets:9572 errors:0 dropped:0 overruns:0 frame:0
TX packets:480 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:833514 (813.9 Kb) TX bytes:89642 (87.5 Kb)
Interrupt:11

eth1 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING NOARP SLAVE MULTICAST MTU:1500 Metric:1
RX packets:8923 errors:0 dropped:0 overruns:0 frame:0
TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:753739 (736.0 Kb) TX bytes:0 (0.0 b)
Interrupt:15
那也就是说在主备模式下,当一个网络接口失效时(例如主交换机掉电等),不回出现网络中断,系统会按照cat /etc/rc.d/rc.local里指定网卡的顺序工作,机器仍能对外服务,起到了失效保护的功能.

在mode=0 负载均衡工作模式,他能提供两倍的带宽,下我们来看一下网卡的配置信息
[root@rhas-13 root]# ifconfig
bond0 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING MASTER MULTICAST MTU:1500 Metric:1
RX packets:2817 errors:0 dropped:0 overruns:0 frame:0
TX packets:95 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:0
RX bytes:226957 (221.6 Kb) TX bytes:15266 (14.9 Kb)

eth0 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING SLAVE MULTICAST MTU:1500 Metric:1
RX packets:1406 errors:0 dropped:0 overruns:0 frame:0
TX packets:48 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:113967 (111.2 Kb) TX bytes:7268 (7.0 Kb)
Interrupt:11

eth1 Link encap:Ethernet HWaddr 00:0E:7F:25:D9:8B
inet addr:192.168.0.13 Bcast:192.168.0.255 Mask:255.255.255.0
UP BROADCAST RUNNING SLAVE MULTICAST MTU:1500 Metric:1
RX packets:1411 errors:0 dropped:0 overruns:0 frame:0
TX packets:47 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:112990 (110.3 Kb) TX bytes:7998 (7.8 Kb)
Interrupt:15

在这种情况下出现一块网卡失效,仅仅会是服务器出口带宽下降,也不会影响网络使用.

通过查看bond0的工作状态查询能详细的掌握bonding的工作状态
[root@rhas-13 bonding]# cat /proc/net/bonding/bond0
bonding.c:v2.4.1 (September 15, 2003)

Bonding Mode: load balancing (round-robin)
MII Status: up
MII Polling Interval (ms): 0
Up Delay (ms): 0
Down Delay (ms): 0
Multicast Mode: all slaves

Slave Interface: eth1
MII Status: up
Link Failure Count: 0
Permanent HW addr: 00:0e:7f:25:d9:8a

Slave Interface: eth0
MII Status: up
Link Failure Count: 0
Permanent HW addr: 00:0e:7f:25:d9:8b

四网卡绑定的问题：

上次遇到过，server四块网卡，同一块物理板（sun4100），只有eth0和eth1做bonding，bonding配置是正确，但是测试切换时，就是切不过去。经过测试，需要修改/etc/modules.conf 如下：

alias bond0 bonding
options bond0 mode=1 miimon=100 arp_interval=1000 arp_ip_target=192.168.0.254,192.168.1.254 primary=eth0
添加了arp路由表，里面写明判断eth0如果到不了以上写的网关，就判定eth0 down了，所以系统才会切换网卡
