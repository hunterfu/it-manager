linux上部署Django项目(Apache+mod_wsgi+django) 
linux,apache,mod_wsgi,django,部署django web程序,Django mod_wsgi 配置
5fa45317-578c-4e38-9e2b-f2f1eecdeb4a


%!Target  : html
%!Encoding: utf-8
%!Options : --toc --enum-title
%!preproc: IMGPATH .
%!preproc: SITE_URL http://www.51know.info/
%!postproc(html): @@ <BR>
%!postproc(xhtml): @@ <BR>
%!postproc(wiki): @@ <BR>
%%TOC


这几天花了点时间,将把django开发好的web项目部署到Apache上，参考了官方的一些文档和互联网上的文档，还是花了比较多的时间，这里把配置的过程说一下。@@
方便有需要的朋友，可以参考，少走弯路!

 
= django项目部署环境说明 =

- 操作系统 : Red Hat Enterprise Linux Server release 5.3 (Tikanga) x86_64
- apache版本 : httpd-2.2.3-22.el5
- mod_wsgi版本 : mod_wsgi-3.2-1.el5 [fedora epel可以下载 http://fedoraproject.org/wiki/EPEL]
- Django版本 : 1.2.3
- python 版本 : 2.5


这里假定Django和Apache已经安装好，并且Django的项目已经开发好。@@
以上软件包都是通过yum包安装,软件包都是系统标准目录结构! @@
django开发好的项目目录是 /var/www/html/server,项目目录结构如下(标准django项目目录结构)

```
#tree -d server/
server/
|-- __init__.py
|-- manage.py
|-- settings.py
|-- backend
|-- static
|   |-- images
|   |-- locale
|   |-- plugins
|   `-- themes
|       |-- default
|       |   `-- images
|       |-- gray
|       |   `-- images
|       `-- icons
|-- template
`-- view
```


= Apache和mod_wsgi配置 = 

修改wsgi配置(/etc/httpd/conf.d/wsgi.conf)

```
#cat /etc/httpd/conf.d/wsgi.conf 
LoadModule wsgi_module modules/mod_wsgi.so
WSGIScriptAlias / "/var/www/html/server/django.wsgi"

<Directory "/var/www/html/server">
	Order Deny,Allow
	Allow from all
</Directory>
```

- 项目目录中的django.wsgi这个文件是需要新建的，后面会说到如何新建这个文件。
- apache使用的标准配置,Apache的DocumentRoot 指向的是 /var/www/html 目录


= 新建django.wsgi文件 =

在项目目录/var/www/html/server下新建一个django.wsgi，文件内容如下:

```
#cat /var/www/html/server/django.wsgi
# -*- coding: utf-8 -*-
import os
import sys
os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'
os.environ['PYTHON_EGG_CACHE'] = '/tmp/.python-eggs'
current_dir = os.path.dirname(__file__)
if current_dir not in sys.path: sys.path.append(current_dir) 
import django.core.handlers.wsgi
application = django.core.handlers.wsgi.WSGIHandler()
```
　
- 第三行 **os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'** ，这个settings就是指项目目录下的setting.py文件.
- 第四行 **os.environ['PYTHON_EGG_CACHE'] = '/tmp/.python-eggs'** ，指定解压egg文件的cache目录，确保运行apache的用户，能够对此目录有读写权限.
- 第五，六行 将当前目录自动加入到python的搜索路径,如果项目中有自己写的模块，方便使用和发布　　
- 最后，这个django.wsgi文件名可以随便取，例如test.wsgi、app.wsgi等等，但是一定要与**/etc/httpd/conf.d/wsgi.conf**配置文件中配置保持一致。@@
如果您这里新建的文件名不是django.wsgi而是test.wsgi，那么**/etc/httpd/conf.d/wsgi.conf**中的配置就应该修改为 **WSGIScriptAlias / "/var/www/html/server/test.wsgi"**


= 修改django项目中的setting.py文件 =

找到项目目录下的setting.py，对于这里就是/var/www/html/server/setting.py。找到其中的TEMPLATE_DIRS，修改为：
```
TEMPLATE_DIRS = ("/var/www/html/server/template",)
```
注意: 模板目录在这里一定要用绝对路劲，而不能用相对路径,当然也有方法动态设置模板路劲

　　

至此配置已经完成了，你可以通过浏览器访问  http://192.168.0.1 ,不出意外，应该能访问到正常页面了.@@
当然你也可以通过虚拟主机的方式来配置，具体可以参考网络上的文章.@@
mod_wsgi是一个开源项目，具体配置选项和说明请参考：[mod_wsgi参考 http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives]

