# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TaLib', [dirname(__file__)])
        except ImportError:
            import _TaLib
            return _TaLib
        if fp is not None:
            try:
                _mod = imp.load_module('_TaLib', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TaLib = swig_import_helper()
    del swig_import_helper
else:
    import _TaLib
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


TA_INTEGER_MIN = _TaLib.TA_INTEGER_MIN
TA_INTEGER_MAX = _TaLib.TA_INTEGER_MAX
TA_REAL_MIN = _TaLib.TA_REAL_MIN
TA_REAL_MAX = _TaLib.TA_REAL_MAX
TA_INTEGER_DEFAULT = _TaLib.TA_INTEGER_DEFAULT
TA_REAL_DEFAULT = _TaLib.TA_REAL_DEFAULT
TA_SUCCESS = _TaLib.TA_SUCCESS
TA_LIB_NOT_INITIALIZE = _TaLib.TA_LIB_NOT_INITIALIZE
TA_BAD_PARAM = _TaLib.TA_BAD_PARAM
TA_ALLOC_ERR = _TaLib.TA_ALLOC_ERR
TA_GROUP_NOT_FOUND = _TaLib.TA_GROUP_NOT_FOUND
TA_FUNC_NOT_FOUND = _TaLib.TA_FUNC_NOT_FOUND
TA_INVALID_HANDLE = _TaLib.TA_INVALID_HANDLE
TA_INVALID_PARAM_HOLDER = _TaLib.TA_INVALID_PARAM_HOLDER
TA_INVALID_PARAM_HOLDER_TYPE = _TaLib.TA_INVALID_PARAM_HOLDER_TYPE
TA_INVALID_PARAM_FUNCTION = _TaLib.TA_INVALID_PARAM_FUNCTION
TA_INPUT_NOT_ALL_INITIALIZE = _TaLib.TA_INPUT_NOT_ALL_INITIALIZE
TA_OUTPUT_NOT_ALL_INITIALIZE = _TaLib.TA_OUTPUT_NOT_ALL_INITIALIZE
TA_OUT_OF_RANGE_START_INDEX = _TaLib.TA_OUT_OF_RANGE_START_INDEX
TA_OUT_OF_RANGE_END_INDEX = _TaLib.TA_OUT_OF_RANGE_END_INDEX
TA_INVALID_LIST_TYPE = _TaLib.TA_INVALID_LIST_TYPE
TA_BAD_OBJECT = _TaLib.TA_BAD_OBJECT
TA_NOT_SUPPORTED = _TaLib.TA_NOT_SUPPORTED
TA_INTERNAL_ERROR = _TaLib.TA_INTERNAL_ERROR
TA_UNKNOWN_ERR = _TaLib.TA_UNKNOWN_ERR
TA_COMPATIBILITY_DEFAULT = _TaLib.TA_COMPATIBILITY_DEFAULT
TA_COMPATIBILITY_METASTOCK = _TaLib.TA_COMPATIBILITY_METASTOCK
TA_MAType_SMA = _TaLib.TA_MAType_SMA
TA_MAType_EMA = _TaLib.TA_MAType_EMA
TA_MAType_WMA = _TaLib.TA_MAType_WMA
TA_MAType_DEMA = _TaLib.TA_MAType_DEMA
TA_MAType_TEMA = _TaLib.TA_MAType_TEMA
TA_MAType_TRIMA = _TaLib.TA_MAType_TRIMA
TA_MAType_KAMA = _TaLib.TA_MAType_KAMA
TA_MAType_MAMA = _TaLib.TA_MAType_MAMA
TA_MAType_T3 = _TaLib.TA_MAType_T3
TA_FUNC_UNST_ADX = _TaLib.TA_FUNC_UNST_ADX
TA_FUNC_UNST_ADXR = _TaLib.TA_FUNC_UNST_ADXR
TA_FUNC_UNST_ATR = _TaLib.TA_FUNC_UNST_ATR
TA_FUNC_UNST_CMO = _TaLib.TA_FUNC_UNST_CMO
TA_FUNC_UNST_DX = _TaLib.TA_FUNC_UNST_DX
TA_FUNC_UNST_EMA = _TaLib.TA_FUNC_UNST_EMA
TA_FUNC_UNST_HT_DCPERIOD = _TaLib.TA_FUNC_UNST_HT_DCPERIOD
TA_FUNC_UNST_HT_DCPHASE = _TaLib.TA_FUNC_UNST_HT_DCPHASE
TA_FUNC_UNST_HT_PHASOR = _TaLib.TA_FUNC_UNST_HT_PHASOR
TA_FUNC_UNST_HT_SINE = _TaLib.TA_FUNC_UNST_HT_SINE
TA_FUNC_UNST_HT_TRENDLINE = _TaLib.TA_FUNC_UNST_HT_TRENDLINE
TA_FUNC_UNST_HT_TRENDMODE = _TaLib.TA_FUNC_UNST_HT_TRENDMODE
TA_FUNC_UNST_KAMA = _TaLib.TA_FUNC_UNST_KAMA
TA_FUNC_UNST_MAMA = _TaLib.TA_FUNC_UNST_MAMA
TA_FUNC_UNST_MFI = _TaLib.TA_FUNC_UNST_MFI
TA_FUNC_UNST_MINUS_DI = _TaLib.TA_FUNC_UNST_MINUS_DI
TA_FUNC_UNST_MINUS_DM = _TaLib.TA_FUNC_UNST_MINUS_DM
TA_FUNC_UNST_NATR = _TaLib.TA_FUNC_UNST_NATR
TA_FUNC_UNST_PLUS_DI = _TaLib.TA_FUNC_UNST_PLUS_DI
TA_FUNC_UNST_PLUS_DM = _TaLib.TA_FUNC_UNST_PLUS_DM
TA_FUNC_UNST_RSI = _TaLib.TA_FUNC_UNST_RSI
TA_FUNC_UNST_STOCHRSI = _TaLib.TA_FUNC_UNST_STOCHRSI
TA_FUNC_UNST_T3 = _TaLib.TA_FUNC_UNST_T3
TA_FUNC_UNST_ALL = _TaLib.TA_FUNC_UNST_ALL
TA_FUNC_UNST_NONE = _TaLib.TA_FUNC_UNST_NONE
TA_RangeType_RealBody = _TaLib.TA_RangeType_RealBody
TA_RangeType_HighLow = _TaLib.TA_RangeType_HighLow
TA_RangeType_Shadows = _TaLib.TA_RangeType_Shadows
TA_BodyLong = _TaLib.TA_BodyLong
TA_BodyVeryLong = _TaLib.TA_BodyVeryLong
TA_BodyShort = _TaLib.TA_BodyShort
TA_BodyDoji = _TaLib.TA_BodyDoji
TA_ShadowLong = _TaLib.TA_ShadowLong
TA_ShadowVeryLong = _TaLib.TA_ShadowVeryLong
TA_ShadowShort = _TaLib.TA_ShadowShort
TA_ShadowVeryShort = _TaLib.TA_ShadowVeryShort
TA_Near = _TaLib.TA_Near
TA_Far = _TaLib.TA_Far
TA_Equal = _TaLib.TA_Equal
TA_AllCandleSettings = _TaLib.TA_AllCandleSettings

def TA_GetVersionString():
  return _TaLib.TA_GetVersionString()
TA_GetVersionString = _TaLib.TA_GetVersionString

def TA_GetVersionMajor():
  return _TaLib.TA_GetVersionMajor()
TA_GetVersionMajor = _TaLib.TA_GetVersionMajor

def TA_GetVersionMinor():
  return _TaLib.TA_GetVersionMinor()
TA_GetVersionMinor = _TaLib.TA_GetVersionMinor

def TA_GetVersionBuild():
  return _TaLib.TA_GetVersionBuild()
TA_GetVersionBuild = _TaLib.TA_GetVersionBuild

def TA_GetVersionDate():
  return _TaLib.TA_GetVersionDate()
TA_GetVersionDate = _TaLib.TA_GetVersionDate

def TA_GetVersionTime():
  return _TaLib.TA_GetVersionTime()
TA_GetVersionTime = _TaLib.TA_GetVersionTime
class TA_RetCodeInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    enumStr = _swig_property(_TaLib.TA_RetCodeInfo_enumStr_get, _TaLib.TA_RetCodeInfo_enumStr_set)
    infoStr = _swig_property(_TaLib.TA_RetCodeInfo_infoStr_get, _TaLib.TA_RetCodeInfo_infoStr_set)
    def __init__(self): 
        this = _TaLib.new_TA_RetCodeInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _TaLib.delete_TA_RetCodeInfo
    __del__ = lambda self : None;
TA_RetCodeInfo_swigregister = _TaLib.TA_RetCodeInfo_swigregister
TA_RetCodeInfo_swigregister(TA_RetCodeInfo)


def TA_SetRetCodeInfo(*args):
  return _TaLib.TA_SetRetCodeInfo(*args)
TA_SetRetCodeInfo = _TaLib.TA_SetRetCodeInfo

def TA_Initialize():
  return _TaLib.TA_Initialize()
TA_Initialize = _TaLib.TA_Initialize

def TA_Shutdown():
  return _TaLib.TA_Shutdown()
TA_Shutdown = _TaLib.TA_Shutdown

def TA_ACOS(*args):
  return _TaLib.TA_ACOS(*args)
TA_ACOS = _TaLib.TA_ACOS

def TA_ACOS_Lookback():
  return _TaLib.TA_ACOS_Lookback()
TA_ACOS_Lookback = _TaLib.TA_ACOS_Lookback

def TA_AD(*args):
  return _TaLib.TA_AD(*args)
TA_AD = _TaLib.TA_AD

def TA_AD_Lookback():
  return _TaLib.TA_AD_Lookback()
TA_AD_Lookback = _TaLib.TA_AD_Lookback

def TA_ADD(*args):
  return _TaLib.TA_ADD(*args)
TA_ADD = _TaLib.TA_ADD

def TA_ADD_Lookback():
  return _TaLib.TA_ADD_Lookback()
TA_ADD_Lookback = _TaLib.TA_ADD_Lookback

def TA_ADOSC(*args):
  return _TaLib.TA_ADOSC(*args)
TA_ADOSC = _TaLib.TA_ADOSC

def TA_ADOSC_Lookback(*args):
  return _TaLib.TA_ADOSC_Lookback(*args)
TA_ADOSC_Lookback = _TaLib.TA_ADOSC_Lookback

def TA_ADX(*args):
  return _TaLib.TA_ADX(*args)
TA_ADX = _TaLib.TA_ADX

def TA_ADX_Lookback(*args):
  return _TaLib.TA_ADX_Lookback(*args)
TA_ADX_Lookback = _TaLib.TA_ADX_Lookback

def TA_ADXR(*args):
  return _TaLib.TA_ADXR(*args)
TA_ADXR = _TaLib.TA_ADXR

def TA_ADXR_Lookback(*args):
  return _TaLib.TA_ADXR_Lookback(*args)
TA_ADXR_Lookback = _TaLib.TA_ADXR_Lookback

def TA_APO(*args):
  return _TaLib.TA_APO(*args)
TA_APO = _TaLib.TA_APO

def TA_APO_Lookback(*args):
  return _TaLib.TA_APO_Lookback(*args)
TA_APO_Lookback = _TaLib.TA_APO_Lookback

def TA_AROON(*args):
  return _TaLib.TA_AROON(*args)
TA_AROON = _TaLib.TA_AROON

def TA_AROON_Lookback(*args):
  return _TaLib.TA_AROON_Lookback(*args)
TA_AROON_Lookback = _TaLib.TA_AROON_Lookback

def TA_AROONOSC(*args):
  return _TaLib.TA_AROONOSC(*args)
TA_AROONOSC = _TaLib.TA_AROONOSC

def TA_AROONOSC_Lookback(*args):
  return _TaLib.TA_AROONOSC_Lookback(*args)
TA_AROONOSC_Lookback = _TaLib.TA_AROONOSC_Lookback

def TA_ASIN(*args):
  return _TaLib.TA_ASIN(*args)
TA_ASIN = _TaLib.TA_ASIN

def TA_ASIN_Lookback():
  return _TaLib.TA_ASIN_Lookback()
TA_ASIN_Lookback = _TaLib.TA_ASIN_Lookback

def TA_ATAN(*args):
  return _TaLib.TA_ATAN(*args)
TA_ATAN = _TaLib.TA_ATAN

def TA_ATAN_Lookback():
  return _TaLib.TA_ATAN_Lookback()
TA_ATAN_Lookback = _TaLib.TA_ATAN_Lookback

def TA_ATR(*args):
  return _TaLib.TA_ATR(*args)
TA_ATR = _TaLib.TA_ATR

def TA_ATR_Lookback(*args):
  return _TaLib.TA_ATR_Lookback(*args)
TA_ATR_Lookback = _TaLib.TA_ATR_Lookback

def TA_AVGPRICE(*args):
  return _TaLib.TA_AVGPRICE(*args)
TA_AVGPRICE = _TaLib.TA_AVGPRICE

def TA_AVGPRICE_Lookback():
  return _TaLib.TA_AVGPRICE_Lookback()
TA_AVGPRICE_Lookback = _TaLib.TA_AVGPRICE_Lookback

def TA_BBANDS(*args):
  return _TaLib.TA_BBANDS(*args)
TA_BBANDS = _TaLib.TA_BBANDS

def TA_BBANDS_Lookback(*args):
  return _TaLib.TA_BBANDS_Lookback(*args)
TA_BBANDS_Lookback = _TaLib.TA_BBANDS_Lookback

def TA_BETA(*args):
  return _TaLib.TA_BETA(*args)
TA_BETA = _TaLib.TA_BETA

def TA_BETA_Lookback(*args):
  return _TaLib.TA_BETA_Lookback(*args)
TA_BETA_Lookback = _TaLib.TA_BETA_Lookback

def TA_BOP(*args):
  return _TaLib.TA_BOP(*args)
TA_BOP = _TaLib.TA_BOP

def TA_BOP_Lookback():
  return _TaLib.TA_BOP_Lookback()
TA_BOP_Lookback = _TaLib.TA_BOP_Lookback

def TA_CCI(*args):
  return _TaLib.TA_CCI(*args)
TA_CCI = _TaLib.TA_CCI

def TA_CCI_Lookback(*args):
  return _TaLib.TA_CCI_Lookback(*args)
TA_CCI_Lookback = _TaLib.TA_CCI_Lookback

def TA_CDL2CROWS(*args):
  return _TaLib.TA_CDL2CROWS(*args)
TA_CDL2CROWS = _TaLib.TA_CDL2CROWS

def TA_CDL2CROWS_Lookback():
  return _TaLib.TA_CDL2CROWS_Lookback()
TA_CDL2CROWS_Lookback = _TaLib.TA_CDL2CROWS_Lookback

def TA_CDL3BLACKCROWS(*args):
  return _TaLib.TA_CDL3BLACKCROWS(*args)
TA_CDL3BLACKCROWS = _TaLib.TA_CDL3BLACKCROWS

def TA_CDL3BLACKCROWS_Lookback():
  return _TaLib.TA_CDL3BLACKCROWS_Lookback()
TA_CDL3BLACKCROWS_Lookback = _TaLib.TA_CDL3BLACKCROWS_Lookback

def TA_CDL3INSIDE(*args):
  return _TaLib.TA_CDL3INSIDE(*args)
TA_CDL3INSIDE = _TaLib.TA_CDL3INSIDE

def TA_CDL3INSIDE_Lookback():
  return _TaLib.TA_CDL3INSIDE_Lookback()
TA_CDL3INSIDE_Lookback = _TaLib.TA_CDL3INSIDE_Lookback

def TA_CDL3LINESTRIKE(*args):
  return _TaLib.TA_CDL3LINESTRIKE(*args)
TA_CDL3LINESTRIKE = _TaLib.TA_CDL3LINESTRIKE

def TA_CDL3LINESTRIKE_Lookback():
  return _TaLib.TA_CDL3LINESTRIKE_Lookback()
TA_CDL3LINESTRIKE_Lookback = _TaLib.TA_CDL3LINESTRIKE_Lookback

def TA_CDL3OUTSIDE(*args):
  return _TaLib.TA_CDL3OUTSIDE(*args)
TA_CDL3OUTSIDE = _TaLib.TA_CDL3OUTSIDE

def TA_CDL3OUTSIDE_Lookback():
  return _TaLib.TA_CDL3OUTSIDE_Lookback()
TA_CDL3OUTSIDE_Lookback = _TaLib.TA_CDL3OUTSIDE_Lookback

def TA_CDL3STARSINSOUTH(*args):
  return _TaLib.TA_CDL3STARSINSOUTH(*args)
TA_CDL3STARSINSOUTH = _TaLib.TA_CDL3STARSINSOUTH

def TA_CDL3STARSINSOUTH_Lookback():
  return _TaLib.TA_CDL3STARSINSOUTH_Lookback()
TA_CDL3STARSINSOUTH_Lookback = _TaLib.TA_CDL3STARSINSOUTH_Lookback

def TA_CDL3WHITESOLDIERS(*args):
  return _TaLib.TA_CDL3WHITESOLDIERS(*args)
TA_CDL3WHITESOLDIERS = _TaLib.TA_CDL3WHITESOLDIERS

def TA_CDL3WHITESOLDIERS_Lookback():
  return _TaLib.TA_CDL3WHITESOLDIERS_Lookback()
TA_CDL3WHITESOLDIERS_Lookback = _TaLib.TA_CDL3WHITESOLDIERS_Lookback

def TA_CDLABANDONEDBABY(*args):
  return _TaLib.TA_CDLABANDONEDBABY(*args)
TA_CDLABANDONEDBABY = _TaLib.TA_CDLABANDONEDBABY

def TA_CDLABANDONEDBABY_Lookback(*args):
  return _TaLib.TA_CDLABANDONEDBABY_Lookback(*args)
TA_CDLABANDONEDBABY_Lookback = _TaLib.TA_CDLABANDONEDBABY_Lookback

def TA_CDLADVANCEBLOCK(*args):
  return _TaLib.TA_CDLADVANCEBLOCK(*args)
TA_CDLADVANCEBLOCK = _TaLib.TA_CDLADVANCEBLOCK

def TA_CDLADVANCEBLOCK_Lookback():
  return _TaLib.TA_CDLADVANCEBLOCK_Lookback()
TA_CDLADVANCEBLOCK_Lookback = _TaLib.TA_CDLADVANCEBLOCK_Lookback

def TA_CDLBELTHOLD(*args):
  return _TaLib.TA_CDLBELTHOLD(*args)
TA_CDLBELTHOLD = _TaLib.TA_CDLBELTHOLD

def TA_CDLBELTHOLD_Lookback():
  return _TaLib.TA_CDLBELTHOLD_Lookback()
TA_CDLBELTHOLD_Lookback = _TaLib.TA_CDLBELTHOLD_Lookback

def TA_CDLBREAKAWAY(*args):
  return _TaLib.TA_CDLBREAKAWAY(*args)
TA_CDLBREAKAWAY = _TaLib.TA_CDLBREAKAWAY

def TA_CDLBREAKAWAY_Lookback():
  return _TaLib.TA_CDLBREAKAWAY_Lookback()
TA_CDLBREAKAWAY_Lookback = _TaLib.TA_CDLBREAKAWAY_Lookback

def TA_CDLCLOSINGMARUBOZU(*args):
  return _TaLib.TA_CDLCLOSINGMARUBOZU(*args)
TA_CDLCLOSINGMARUBOZU = _TaLib.TA_CDLCLOSINGMARUBOZU

def TA_CDLCLOSINGMARUBOZU_Lookback():
  return _TaLib.TA_CDLCLOSINGMARUBOZU_Lookback()
TA_CDLCLOSINGMARUBOZU_Lookback = _TaLib.TA_CDLCLOSINGMARUBOZU_Lookback

def TA_CDLCONCEALBABYSWALL(*args):
  return _TaLib.TA_CDLCONCEALBABYSWALL(*args)
TA_CDLCONCEALBABYSWALL = _TaLib.TA_CDLCONCEALBABYSWALL

def TA_CDLCONCEALBABYSWALL_Lookback():
  return _TaLib.TA_CDLCONCEALBABYSWALL_Lookback()
TA_CDLCONCEALBABYSWALL_Lookback = _TaLib.TA_CDLCONCEALBABYSWALL_Lookback

def TA_CDLCOUNTERATTACK(*args):
  return _TaLib.TA_CDLCOUNTERATTACK(*args)
TA_CDLCOUNTERATTACK = _TaLib.TA_CDLCOUNTERATTACK

def TA_CDLCOUNTERATTACK_Lookback():
  return _TaLib.TA_CDLCOUNTERATTACK_Lookback()
TA_CDLCOUNTERATTACK_Lookback = _TaLib.TA_CDLCOUNTERATTACK_Lookback

def TA_CDLDARKCLOUDCOVER(*args):
  return _TaLib.TA_CDLDARKCLOUDCOVER(*args)
TA_CDLDARKCLOUDCOVER = _TaLib.TA_CDLDARKCLOUDCOVER

def TA_CDLDARKCLOUDCOVER_Lookback(*args):
  return _TaLib.TA_CDLDARKCLOUDCOVER_Lookback(*args)
TA_CDLDARKCLOUDCOVER_Lookback = _TaLib.TA_CDLDARKCLOUDCOVER_Lookback

def TA_CDLDOJI(*args):
  return _TaLib.TA_CDLDOJI(*args)
TA_CDLDOJI = _TaLib.TA_CDLDOJI

def TA_CDLDOJI_Lookback():
  return _TaLib.TA_CDLDOJI_Lookback()
TA_CDLDOJI_Lookback = _TaLib.TA_CDLDOJI_Lookback

def TA_CDLDOJISTAR(*args):
  return _TaLib.TA_CDLDOJISTAR(*args)
TA_CDLDOJISTAR = _TaLib.TA_CDLDOJISTAR

def TA_CDLDOJISTAR_Lookback():
  return _TaLib.TA_CDLDOJISTAR_Lookback()
TA_CDLDOJISTAR_Lookback = _TaLib.TA_CDLDOJISTAR_Lookback

def TA_CDLDRAGONFLYDOJI(*args):
  return _TaLib.TA_CDLDRAGONFLYDOJI(*args)
TA_CDLDRAGONFLYDOJI = _TaLib.TA_CDLDRAGONFLYDOJI

def TA_CDLDRAGONFLYDOJI_Lookback():
  return _TaLib.TA_CDLDRAGONFLYDOJI_Lookback()
TA_CDLDRAGONFLYDOJI_Lookback = _TaLib.TA_CDLDRAGONFLYDOJI_Lookback

def TA_CDLENGULFING(*args):
  return _TaLib.TA_CDLENGULFING(*args)
TA_CDLENGULFING = _TaLib.TA_CDLENGULFING

def TA_CDLENGULFING_Lookback():
  return _TaLib.TA_CDLENGULFING_Lookback()
TA_CDLENGULFING_Lookback = _TaLib.TA_CDLENGULFING_Lookback

def TA_CDLEVENINGDOJISTAR(*args):
  return _TaLib.TA_CDLEVENINGDOJISTAR(*args)
TA_CDLEVENINGDOJISTAR = _TaLib.TA_CDLEVENINGDOJISTAR

def TA_CDLEVENINGDOJISTAR_Lookback(*args):
  return _TaLib.TA_CDLEVENINGDOJISTAR_Lookback(*args)
TA_CDLEVENINGDOJISTAR_Lookback = _TaLib.TA_CDLEVENINGDOJISTAR_Lookback

def TA_CDLEVENINGSTAR(*args):
  return _TaLib.TA_CDLEVENINGSTAR(*args)
TA_CDLEVENINGSTAR = _TaLib.TA_CDLEVENINGSTAR

def TA_CDLEVENINGSTAR_Lookback(*args):
  return _TaLib.TA_CDLEVENINGSTAR_Lookback(*args)
TA_CDLEVENINGSTAR_Lookback = _TaLib.TA_CDLEVENINGSTAR_Lookback

def TA_CDLGAPSIDESIDEWHITE(*args):
  return _TaLib.TA_CDLGAPSIDESIDEWHITE(*args)
TA_CDLGAPSIDESIDEWHITE = _TaLib.TA_CDLGAPSIDESIDEWHITE

def TA_CDLGAPSIDESIDEWHITE_Lookback():
  return _TaLib.TA_CDLGAPSIDESIDEWHITE_Lookback()
TA_CDLGAPSIDESIDEWHITE_Lookback = _TaLib.TA_CDLGAPSIDESIDEWHITE_Lookback

def TA_CDLGRAVESTONEDOJI(*args):
  return _TaLib.TA_CDLGRAVESTONEDOJI(*args)
TA_CDLGRAVESTONEDOJI = _TaLib.TA_CDLGRAVESTONEDOJI

def TA_CDLGRAVESTONEDOJI_Lookback():
  return _TaLib.TA_CDLGRAVESTONEDOJI_Lookback()
TA_CDLGRAVESTONEDOJI_Lookback = _TaLib.TA_CDLGRAVESTONEDOJI_Lookback

def TA_CDLHAMMER(*args):
  return _TaLib.TA_CDLHAMMER(*args)
TA_CDLHAMMER = _TaLib.TA_CDLHAMMER

def TA_CDLHAMMER_Lookback():
  return _TaLib.TA_CDLHAMMER_Lookback()
TA_CDLHAMMER_Lookback = _TaLib.TA_CDLHAMMER_Lookback

def TA_CDLHANGINGMAN(*args):
  return _TaLib.TA_CDLHANGINGMAN(*args)
TA_CDLHANGINGMAN = _TaLib.TA_CDLHANGINGMAN

def TA_CDLHANGINGMAN_Lookback():
  return _TaLib.TA_CDLHANGINGMAN_Lookback()
TA_CDLHANGINGMAN_Lookback = _TaLib.TA_CDLHANGINGMAN_Lookback

def TA_CDLHARAMI(*args):
  return _TaLib.TA_CDLHARAMI(*args)
TA_CDLHARAMI = _TaLib.TA_CDLHARAMI

def TA_CDLHARAMI_Lookback():
  return _TaLib.TA_CDLHARAMI_Lookback()
TA_CDLHARAMI_Lookback = _TaLib.TA_CDLHARAMI_Lookback

def TA_CDLHARAMICROSS(*args):
  return _TaLib.TA_CDLHARAMICROSS(*args)
TA_CDLHARAMICROSS = _TaLib.TA_CDLHARAMICROSS

def TA_CDLHARAMICROSS_Lookback():
  return _TaLib.TA_CDLHARAMICROSS_Lookback()
TA_CDLHARAMICROSS_Lookback = _TaLib.TA_CDLHARAMICROSS_Lookback

def TA_CDLHIGHWAVE(*args):
  return _TaLib.TA_CDLHIGHWAVE(*args)
TA_CDLHIGHWAVE = _TaLib.TA_CDLHIGHWAVE

def TA_CDLHIGHWAVE_Lookback():
  return _TaLib.TA_CDLHIGHWAVE_Lookback()
TA_CDLHIGHWAVE_Lookback = _TaLib.TA_CDLHIGHWAVE_Lookback

def TA_CDLHIKKAKE(*args):
  return _TaLib.TA_CDLHIKKAKE(*args)
TA_CDLHIKKAKE = _TaLib.TA_CDLHIKKAKE

def TA_CDLHIKKAKE_Lookback():
  return _TaLib.TA_CDLHIKKAKE_Lookback()
TA_CDLHIKKAKE_Lookback = _TaLib.TA_CDLHIKKAKE_Lookback

def TA_CDLHIKKAKEMOD(*args):
  return _TaLib.TA_CDLHIKKAKEMOD(*args)
TA_CDLHIKKAKEMOD = _TaLib.TA_CDLHIKKAKEMOD

def TA_CDLHIKKAKEMOD_Lookback():
  return _TaLib.TA_CDLHIKKAKEMOD_Lookback()
TA_CDLHIKKAKEMOD_Lookback = _TaLib.TA_CDLHIKKAKEMOD_Lookback

def TA_CDLHOMINGPIGEON(*args):
  return _TaLib.TA_CDLHOMINGPIGEON(*args)
TA_CDLHOMINGPIGEON = _TaLib.TA_CDLHOMINGPIGEON

def TA_CDLHOMINGPIGEON_Lookback():
  return _TaLib.TA_CDLHOMINGPIGEON_Lookback()
TA_CDLHOMINGPIGEON_Lookback = _TaLib.TA_CDLHOMINGPIGEON_Lookback

def TA_CDLIDENTICAL3CROWS(*args):
  return _TaLib.TA_CDLIDENTICAL3CROWS(*args)
TA_CDLIDENTICAL3CROWS = _TaLib.TA_CDLIDENTICAL3CROWS

def TA_CDLIDENTICAL3CROWS_Lookback():
  return _TaLib.TA_CDLIDENTICAL3CROWS_Lookback()
TA_CDLIDENTICAL3CROWS_Lookback = _TaLib.TA_CDLIDENTICAL3CROWS_Lookback

def TA_CDLINNECK(*args):
  return _TaLib.TA_CDLINNECK(*args)
TA_CDLINNECK = _TaLib.TA_CDLINNECK

def TA_CDLINNECK_Lookback():
  return _TaLib.TA_CDLINNECK_Lookback()
TA_CDLINNECK_Lookback = _TaLib.TA_CDLINNECK_Lookback

def TA_CDLINVERTEDHAMMER(*args):
  return _TaLib.TA_CDLINVERTEDHAMMER(*args)
TA_CDLINVERTEDHAMMER = _TaLib.TA_CDLINVERTEDHAMMER

def TA_CDLINVERTEDHAMMER_Lookback():
  return _TaLib.TA_CDLINVERTEDHAMMER_Lookback()
TA_CDLINVERTEDHAMMER_Lookback = _TaLib.TA_CDLINVERTEDHAMMER_Lookback

def TA_CDLKICKING(*args):
  return _TaLib.TA_CDLKICKING(*args)
TA_CDLKICKING = _TaLib.TA_CDLKICKING

def TA_CDLKICKING_Lookback():
  return _TaLib.TA_CDLKICKING_Lookback()
TA_CDLKICKING_Lookback = _TaLib.TA_CDLKICKING_Lookback

def TA_CDLKICKINGBYLENGTH(*args):
  return _TaLib.TA_CDLKICKINGBYLENGTH(*args)
TA_CDLKICKINGBYLENGTH = _TaLib.TA_CDLKICKINGBYLENGTH

def TA_CDLKICKINGBYLENGTH_Lookback():
  return _TaLib.TA_CDLKICKINGBYLENGTH_Lookback()
TA_CDLKICKINGBYLENGTH_Lookback = _TaLib.TA_CDLKICKINGBYLENGTH_Lookback

def TA_CDLLADDERBOTTOM(*args):
  return _TaLib.TA_CDLLADDERBOTTOM(*args)
TA_CDLLADDERBOTTOM = _TaLib.TA_CDLLADDERBOTTOM

def TA_CDLLADDERBOTTOM_Lookback():
  return _TaLib.TA_CDLLADDERBOTTOM_Lookback()
TA_CDLLADDERBOTTOM_Lookback = _TaLib.TA_CDLLADDERBOTTOM_Lookback

def TA_CDLLONGLEGGEDDOJI(*args):
  return _TaLib.TA_CDLLONGLEGGEDDOJI(*args)
TA_CDLLONGLEGGEDDOJI = _TaLib.TA_CDLLONGLEGGEDDOJI

def TA_CDLLONGLEGGEDDOJI_Lookback():
  return _TaLib.TA_CDLLONGLEGGEDDOJI_Lookback()
TA_CDLLONGLEGGEDDOJI_Lookback = _TaLib.TA_CDLLONGLEGGEDDOJI_Lookback

def TA_CDLLONGLINE(*args):
  return _TaLib.TA_CDLLONGLINE(*args)
TA_CDLLONGLINE = _TaLib.TA_CDLLONGLINE

def TA_CDLLONGLINE_Lookback():
  return _TaLib.TA_CDLLONGLINE_Lookback()
TA_CDLLONGLINE_Lookback = _TaLib.TA_CDLLONGLINE_Lookback

def TA_CDLMARUBOZU(*args):
  return _TaLib.TA_CDLMARUBOZU(*args)
TA_CDLMARUBOZU = _TaLib.TA_CDLMARUBOZU

def TA_CDLMARUBOZU_Lookback():
  return _TaLib.TA_CDLMARUBOZU_Lookback()
TA_CDLMARUBOZU_Lookback = _TaLib.TA_CDLMARUBOZU_Lookback

def TA_CDLMATCHINGLOW(*args):
  return _TaLib.TA_CDLMATCHINGLOW(*args)
TA_CDLMATCHINGLOW = _TaLib.TA_CDLMATCHINGLOW

def TA_CDLMATCHINGLOW_Lookback():
  return _TaLib.TA_CDLMATCHINGLOW_Lookback()
TA_CDLMATCHINGLOW_Lookback = _TaLib.TA_CDLMATCHINGLOW_Lookback

def TA_CDLMATHOLD(*args):
  return _TaLib.TA_CDLMATHOLD(*args)
TA_CDLMATHOLD = _TaLib.TA_CDLMATHOLD

def TA_CDLMATHOLD_Lookback(*args):
  return _TaLib.TA_CDLMATHOLD_Lookback(*args)
TA_CDLMATHOLD_Lookback = _TaLib.TA_CDLMATHOLD_Lookback

def TA_CDLMORNINGDOJISTAR(*args):
  return _TaLib.TA_CDLMORNINGDOJISTAR(*args)
TA_CDLMORNINGDOJISTAR = _TaLib.TA_CDLMORNINGDOJISTAR

def TA_CDLMORNINGDOJISTAR_Lookback(*args):
  return _TaLib.TA_CDLMORNINGDOJISTAR_Lookback(*args)
TA_CDLMORNINGDOJISTAR_Lookback = _TaLib.TA_CDLMORNINGDOJISTAR_Lookback

def TA_CDLMORNINGSTAR(*args):
  return _TaLib.TA_CDLMORNINGSTAR(*args)
TA_CDLMORNINGSTAR = _TaLib.TA_CDLMORNINGSTAR

def TA_CDLMORNINGSTAR_Lookback(*args):
  return _TaLib.TA_CDLMORNINGSTAR_Lookback(*args)
TA_CDLMORNINGSTAR_Lookback = _TaLib.TA_CDLMORNINGSTAR_Lookback

def TA_CDLONNECK(*args):
  return _TaLib.TA_CDLONNECK(*args)
TA_CDLONNECK = _TaLib.TA_CDLONNECK

def TA_CDLONNECK_Lookback():
  return _TaLib.TA_CDLONNECK_Lookback()
TA_CDLONNECK_Lookback = _TaLib.TA_CDLONNECK_Lookback

def TA_CDLPIERCING(*args):
  return _TaLib.TA_CDLPIERCING(*args)
TA_CDLPIERCING = _TaLib.TA_CDLPIERCING

def TA_CDLPIERCING_Lookback():
  return _TaLib.TA_CDLPIERCING_Lookback()
TA_CDLPIERCING_Lookback = _TaLib.TA_CDLPIERCING_Lookback

def TA_CDLRICKSHAWMAN(*args):
  return _TaLib.TA_CDLRICKSHAWMAN(*args)
TA_CDLRICKSHAWMAN = _TaLib.TA_CDLRICKSHAWMAN

def TA_CDLRICKSHAWMAN_Lookback():
  return _TaLib.TA_CDLRICKSHAWMAN_Lookback()
TA_CDLRICKSHAWMAN_Lookback = _TaLib.TA_CDLRICKSHAWMAN_Lookback

def TA_CDLRISEFALL3METHODS(*args):
  return _TaLib.TA_CDLRISEFALL3METHODS(*args)
TA_CDLRISEFALL3METHODS = _TaLib.TA_CDLRISEFALL3METHODS

def TA_CDLRISEFALL3METHODS_Lookback():
  return _TaLib.TA_CDLRISEFALL3METHODS_Lookback()
TA_CDLRISEFALL3METHODS_Lookback = _TaLib.TA_CDLRISEFALL3METHODS_Lookback

def TA_CDLSEPARATINGLINES(*args):
  return _TaLib.TA_CDLSEPARATINGLINES(*args)
TA_CDLSEPARATINGLINES = _TaLib.TA_CDLSEPARATINGLINES

def TA_CDLSEPARATINGLINES_Lookback():
  return _TaLib.TA_CDLSEPARATINGLINES_Lookback()
TA_CDLSEPARATINGLINES_Lookback = _TaLib.TA_CDLSEPARATINGLINES_Lookback

def TA_CDLSHOOTINGSTAR(*args):
  return _TaLib.TA_CDLSHOOTINGSTAR(*args)
TA_CDLSHOOTINGSTAR = _TaLib.TA_CDLSHOOTINGSTAR

def TA_CDLSHOOTINGSTAR_Lookback():
  return _TaLib.TA_CDLSHOOTINGSTAR_Lookback()
TA_CDLSHOOTINGSTAR_Lookback = _TaLib.TA_CDLSHOOTINGSTAR_Lookback

def TA_CDLSHORTLINE(*args):
  return _TaLib.TA_CDLSHORTLINE(*args)
TA_CDLSHORTLINE = _TaLib.TA_CDLSHORTLINE

def TA_CDLSHORTLINE_Lookback():
  return _TaLib.TA_CDLSHORTLINE_Lookback()
TA_CDLSHORTLINE_Lookback = _TaLib.TA_CDLSHORTLINE_Lookback

def TA_CDLSPINNINGTOP(*args):
  return _TaLib.TA_CDLSPINNINGTOP(*args)
TA_CDLSPINNINGTOP = _TaLib.TA_CDLSPINNINGTOP

def TA_CDLSPINNINGTOP_Lookback():
  return _TaLib.TA_CDLSPINNINGTOP_Lookback()
TA_CDLSPINNINGTOP_Lookback = _TaLib.TA_CDLSPINNINGTOP_Lookback

def TA_CDLSTALLEDPATTERN(*args):
  return _TaLib.TA_CDLSTALLEDPATTERN(*args)
TA_CDLSTALLEDPATTERN = _TaLib.TA_CDLSTALLEDPATTERN

def TA_CDLSTALLEDPATTERN_Lookback():
  return _TaLib.TA_CDLSTALLEDPATTERN_Lookback()
TA_CDLSTALLEDPATTERN_Lookback = _TaLib.TA_CDLSTALLEDPATTERN_Lookback

def TA_CDLSTICKSANDWICH(*args):
  return _TaLib.TA_CDLSTICKSANDWICH(*args)
TA_CDLSTICKSANDWICH = _TaLib.TA_CDLSTICKSANDWICH

def TA_CDLSTICKSANDWICH_Lookback():
  return _TaLib.TA_CDLSTICKSANDWICH_Lookback()
TA_CDLSTICKSANDWICH_Lookback = _TaLib.TA_CDLSTICKSANDWICH_Lookback

def TA_CDLTAKURI(*args):
  return _TaLib.TA_CDLTAKURI(*args)
TA_CDLTAKURI = _TaLib.TA_CDLTAKURI

def TA_CDLTAKURI_Lookback():
  return _TaLib.TA_CDLTAKURI_Lookback()
TA_CDLTAKURI_Lookback = _TaLib.TA_CDLTAKURI_Lookback

def TA_CDLTASUKIGAP(*args):
  return _TaLib.TA_CDLTASUKIGAP(*args)
TA_CDLTASUKIGAP = _TaLib.TA_CDLTASUKIGAP

def TA_CDLTASUKIGAP_Lookback():
  return _TaLib.TA_CDLTASUKIGAP_Lookback()
TA_CDLTASUKIGAP_Lookback = _TaLib.TA_CDLTASUKIGAP_Lookback

def TA_CDLTHRUSTING(*args):
  return _TaLib.TA_CDLTHRUSTING(*args)
TA_CDLTHRUSTING = _TaLib.TA_CDLTHRUSTING

def TA_CDLTHRUSTING_Lookback():
  return _TaLib.TA_CDLTHRUSTING_Lookback()
TA_CDLTHRUSTING_Lookback = _TaLib.TA_CDLTHRUSTING_Lookback

def TA_CDLTRISTAR(*args):
  return _TaLib.TA_CDLTRISTAR(*args)
TA_CDLTRISTAR = _TaLib.TA_CDLTRISTAR

def TA_CDLTRISTAR_Lookback():
  return _TaLib.TA_CDLTRISTAR_Lookback()
TA_CDLTRISTAR_Lookback = _TaLib.TA_CDLTRISTAR_Lookback

def TA_CDLUNIQUE3RIVER(*args):
  return _TaLib.TA_CDLUNIQUE3RIVER(*args)
TA_CDLUNIQUE3RIVER = _TaLib.TA_CDLUNIQUE3RIVER

def TA_CDLUNIQUE3RIVER_Lookback():
  return _TaLib.TA_CDLUNIQUE3RIVER_Lookback()
TA_CDLUNIQUE3RIVER_Lookback = _TaLib.TA_CDLUNIQUE3RIVER_Lookback

def TA_CDLUPSIDEGAP2CROWS(*args):
  return _TaLib.TA_CDLUPSIDEGAP2CROWS(*args)
TA_CDLUPSIDEGAP2CROWS = _TaLib.TA_CDLUPSIDEGAP2CROWS

def TA_CDLUPSIDEGAP2CROWS_Lookback():
  return _TaLib.TA_CDLUPSIDEGAP2CROWS_Lookback()
TA_CDLUPSIDEGAP2CROWS_Lookback = _TaLib.TA_CDLUPSIDEGAP2CROWS_Lookback

def TA_CDLXSIDEGAP3METHODS(*args):
  return _TaLib.TA_CDLXSIDEGAP3METHODS(*args)
TA_CDLXSIDEGAP3METHODS = _TaLib.TA_CDLXSIDEGAP3METHODS

def TA_CDLXSIDEGAP3METHODS_Lookback():
  return _TaLib.TA_CDLXSIDEGAP3METHODS_Lookback()
TA_CDLXSIDEGAP3METHODS_Lookback = _TaLib.TA_CDLXSIDEGAP3METHODS_Lookback

def TA_CEIL(*args):
  return _TaLib.TA_CEIL(*args)
TA_CEIL = _TaLib.TA_CEIL

def TA_CEIL_Lookback():
  return _TaLib.TA_CEIL_Lookback()
TA_CEIL_Lookback = _TaLib.TA_CEIL_Lookback

def TA_CMO(*args):
  return _TaLib.TA_CMO(*args)
TA_CMO = _TaLib.TA_CMO

def TA_CMO_Lookback(*args):
  return _TaLib.TA_CMO_Lookback(*args)
TA_CMO_Lookback = _TaLib.TA_CMO_Lookback

def TA_CORREL(*args):
  return _TaLib.TA_CORREL(*args)
TA_CORREL = _TaLib.TA_CORREL

def TA_CORREL_Lookback(*args):
  return _TaLib.TA_CORREL_Lookback(*args)
TA_CORREL_Lookback = _TaLib.TA_CORREL_Lookback

def TA_COS(*args):
  return _TaLib.TA_COS(*args)
TA_COS = _TaLib.TA_COS

def TA_COS_Lookback():
  return _TaLib.TA_COS_Lookback()
TA_COS_Lookback = _TaLib.TA_COS_Lookback

def TA_COSH(*args):
  return _TaLib.TA_COSH(*args)
TA_COSH = _TaLib.TA_COSH

def TA_COSH_Lookback():
  return _TaLib.TA_COSH_Lookback()
TA_COSH_Lookback = _TaLib.TA_COSH_Lookback

def TA_DEMA(*args):
  return _TaLib.TA_DEMA(*args)
TA_DEMA = _TaLib.TA_DEMA

def TA_DEMA_Lookback(*args):
  return _TaLib.TA_DEMA_Lookback(*args)
TA_DEMA_Lookback = _TaLib.TA_DEMA_Lookback

def TA_DIV(*args):
  return _TaLib.TA_DIV(*args)
TA_DIV = _TaLib.TA_DIV

def TA_DIV_Lookback():
  return _TaLib.TA_DIV_Lookback()
TA_DIV_Lookback = _TaLib.TA_DIV_Lookback

def TA_DX(*args):
  return _TaLib.TA_DX(*args)
TA_DX = _TaLib.TA_DX

def TA_DX_Lookback(*args):
  return _TaLib.TA_DX_Lookback(*args)
TA_DX_Lookback = _TaLib.TA_DX_Lookback

def TA_EMA(*args):
  return _TaLib.TA_EMA(*args)
TA_EMA = _TaLib.TA_EMA

def TA_EMA_Lookback(*args):
  return _TaLib.TA_EMA_Lookback(*args)
TA_EMA_Lookback = _TaLib.TA_EMA_Lookback

def TA_EXP(*args):
  return _TaLib.TA_EXP(*args)
TA_EXP = _TaLib.TA_EXP

def TA_EXP_Lookback():
  return _TaLib.TA_EXP_Lookback()
TA_EXP_Lookback = _TaLib.TA_EXP_Lookback

def TA_FLOOR(*args):
  return _TaLib.TA_FLOOR(*args)
TA_FLOOR = _TaLib.TA_FLOOR

def TA_FLOOR_Lookback():
  return _TaLib.TA_FLOOR_Lookback()
TA_FLOOR_Lookback = _TaLib.TA_FLOOR_Lookback

def TA_HT_DCPERIOD(*args):
  return _TaLib.TA_HT_DCPERIOD(*args)
TA_HT_DCPERIOD = _TaLib.TA_HT_DCPERIOD

def TA_HT_DCPERIOD_Lookback():
  return _TaLib.TA_HT_DCPERIOD_Lookback()
TA_HT_DCPERIOD_Lookback = _TaLib.TA_HT_DCPERIOD_Lookback

def TA_HT_DCPHASE(*args):
  return _TaLib.TA_HT_DCPHASE(*args)
TA_HT_DCPHASE = _TaLib.TA_HT_DCPHASE

def TA_HT_DCPHASE_Lookback():
  return _TaLib.TA_HT_DCPHASE_Lookback()
TA_HT_DCPHASE_Lookback = _TaLib.TA_HT_DCPHASE_Lookback

def TA_HT_PHASOR(*args):
  return _TaLib.TA_HT_PHASOR(*args)
TA_HT_PHASOR = _TaLib.TA_HT_PHASOR

def TA_HT_PHASOR_Lookback():
  return _TaLib.TA_HT_PHASOR_Lookback()
TA_HT_PHASOR_Lookback = _TaLib.TA_HT_PHASOR_Lookback

def TA_HT_SINE(*args):
  return _TaLib.TA_HT_SINE(*args)
TA_HT_SINE = _TaLib.TA_HT_SINE

def TA_HT_SINE_Lookback():
  return _TaLib.TA_HT_SINE_Lookback()
TA_HT_SINE_Lookback = _TaLib.TA_HT_SINE_Lookback

def TA_HT_TRENDLINE(*args):
  return _TaLib.TA_HT_TRENDLINE(*args)
TA_HT_TRENDLINE = _TaLib.TA_HT_TRENDLINE

def TA_HT_TRENDLINE_Lookback():
  return _TaLib.TA_HT_TRENDLINE_Lookback()
TA_HT_TRENDLINE_Lookback = _TaLib.TA_HT_TRENDLINE_Lookback

def TA_HT_TRENDMODE(*args):
  return _TaLib.TA_HT_TRENDMODE(*args)
TA_HT_TRENDMODE = _TaLib.TA_HT_TRENDMODE

def TA_HT_TRENDMODE_Lookback():
  return _TaLib.TA_HT_TRENDMODE_Lookback()
TA_HT_TRENDMODE_Lookback = _TaLib.TA_HT_TRENDMODE_Lookback

def TA_KAMA(*args):
  return _TaLib.TA_KAMA(*args)
TA_KAMA = _TaLib.TA_KAMA

def TA_KAMA_Lookback(*args):
  return _TaLib.TA_KAMA_Lookback(*args)
TA_KAMA_Lookback = _TaLib.TA_KAMA_Lookback

def TA_LINEARREG(*args):
  return _TaLib.TA_LINEARREG(*args)
TA_LINEARREG = _TaLib.TA_LINEARREG

def TA_LINEARREG_Lookback(*args):
  return _TaLib.TA_LINEARREG_Lookback(*args)
TA_LINEARREG_Lookback = _TaLib.TA_LINEARREG_Lookback

def TA_LINEARREG_ANGLE(*args):
  return _TaLib.TA_LINEARREG_ANGLE(*args)
TA_LINEARREG_ANGLE = _TaLib.TA_LINEARREG_ANGLE

def TA_LINEARREG_ANGLE_Lookback(*args):
  return _TaLib.TA_LINEARREG_ANGLE_Lookback(*args)
TA_LINEARREG_ANGLE_Lookback = _TaLib.TA_LINEARREG_ANGLE_Lookback

def TA_LINEARREG_INTERCEPT(*args):
  return _TaLib.TA_LINEARREG_INTERCEPT(*args)
TA_LINEARREG_INTERCEPT = _TaLib.TA_LINEARREG_INTERCEPT

def TA_LINEARREG_INTERCEPT_Lookback(*args):
  return _TaLib.TA_LINEARREG_INTERCEPT_Lookback(*args)
TA_LINEARREG_INTERCEPT_Lookback = _TaLib.TA_LINEARREG_INTERCEPT_Lookback

def TA_LINEARREG_SLOPE(*args):
  return _TaLib.TA_LINEARREG_SLOPE(*args)
TA_LINEARREG_SLOPE = _TaLib.TA_LINEARREG_SLOPE

def TA_LINEARREG_SLOPE_Lookback(*args):
  return _TaLib.TA_LINEARREG_SLOPE_Lookback(*args)
TA_LINEARREG_SLOPE_Lookback = _TaLib.TA_LINEARREG_SLOPE_Lookback

def TA_LN(*args):
  return _TaLib.TA_LN(*args)
TA_LN = _TaLib.TA_LN

def TA_LN_Lookback():
  return _TaLib.TA_LN_Lookback()
TA_LN_Lookback = _TaLib.TA_LN_Lookback

def TA_LOG10(*args):
  return _TaLib.TA_LOG10(*args)
TA_LOG10 = _TaLib.TA_LOG10

def TA_LOG10_Lookback():
  return _TaLib.TA_LOG10_Lookback()
TA_LOG10_Lookback = _TaLib.TA_LOG10_Lookback

def TA_MA(*args):
  return _TaLib.TA_MA(*args)
TA_MA = _TaLib.TA_MA

def TA_MA_Lookback(*args):
  return _TaLib.TA_MA_Lookback(*args)
TA_MA_Lookback = _TaLib.TA_MA_Lookback

def TA_MACD(*args):
  return _TaLib.TA_MACD(*args)
TA_MACD = _TaLib.TA_MACD

def TA_MACD_Lookback(*args):
  return _TaLib.TA_MACD_Lookback(*args)
TA_MACD_Lookback = _TaLib.TA_MACD_Lookback

def TA_MACDEXT(*args):
  return _TaLib.TA_MACDEXT(*args)
TA_MACDEXT = _TaLib.TA_MACDEXT

def TA_MACDEXT_Lookback(*args):
  return _TaLib.TA_MACDEXT_Lookback(*args)
TA_MACDEXT_Lookback = _TaLib.TA_MACDEXT_Lookback

def TA_MACDFIX(*args):
  return _TaLib.TA_MACDFIX(*args)
TA_MACDFIX = _TaLib.TA_MACDFIX

def TA_MACDFIX_Lookback(*args):
  return _TaLib.TA_MACDFIX_Lookback(*args)
TA_MACDFIX_Lookback = _TaLib.TA_MACDFIX_Lookback

def TA_MAMA(*args):
  return _TaLib.TA_MAMA(*args)
TA_MAMA = _TaLib.TA_MAMA

def TA_MAMA_Lookback(*args):
  return _TaLib.TA_MAMA_Lookback(*args)
TA_MAMA_Lookback = _TaLib.TA_MAMA_Lookback

def TA_MAVP(*args):
  return _TaLib.TA_MAVP(*args)
TA_MAVP = _TaLib.TA_MAVP

def TA_MAVP_Lookback(*args):
  return _TaLib.TA_MAVP_Lookback(*args)
TA_MAVP_Lookback = _TaLib.TA_MAVP_Lookback

def TA_MAX(*args):
  return _TaLib.TA_MAX(*args)
TA_MAX = _TaLib.TA_MAX

def TA_MAX_Lookback(*args):
  return _TaLib.TA_MAX_Lookback(*args)
TA_MAX_Lookback = _TaLib.TA_MAX_Lookback

def TA_MAXINDEX(*args):
  return _TaLib.TA_MAXINDEX(*args)
TA_MAXINDEX = _TaLib.TA_MAXINDEX

def TA_MAXINDEX_Lookback(*args):
  return _TaLib.TA_MAXINDEX_Lookback(*args)
TA_MAXINDEX_Lookback = _TaLib.TA_MAXINDEX_Lookback

def TA_MEDPRICE(*args):
  return _TaLib.TA_MEDPRICE(*args)
TA_MEDPRICE = _TaLib.TA_MEDPRICE

def TA_MEDPRICE_Lookback():
  return _TaLib.TA_MEDPRICE_Lookback()
TA_MEDPRICE_Lookback = _TaLib.TA_MEDPRICE_Lookback

def TA_MFI(*args):
  return _TaLib.TA_MFI(*args)
TA_MFI = _TaLib.TA_MFI

def TA_MFI_Lookback(*args):
  return _TaLib.TA_MFI_Lookback(*args)
TA_MFI_Lookback = _TaLib.TA_MFI_Lookback

def TA_MIDPOINT(*args):
  return _TaLib.TA_MIDPOINT(*args)
TA_MIDPOINT = _TaLib.TA_MIDPOINT

def TA_MIDPOINT_Lookback(*args):
  return _TaLib.TA_MIDPOINT_Lookback(*args)
TA_MIDPOINT_Lookback = _TaLib.TA_MIDPOINT_Lookback

def TA_MIDPRICE(*args):
  return _TaLib.TA_MIDPRICE(*args)
TA_MIDPRICE = _TaLib.TA_MIDPRICE

def TA_MIDPRICE_Lookback(*args):
  return _TaLib.TA_MIDPRICE_Lookback(*args)
TA_MIDPRICE_Lookback = _TaLib.TA_MIDPRICE_Lookback

def TA_MIN(*args):
  return _TaLib.TA_MIN(*args)
TA_MIN = _TaLib.TA_MIN

def TA_MIN_Lookback(*args):
  return _TaLib.TA_MIN_Lookback(*args)
TA_MIN_Lookback = _TaLib.TA_MIN_Lookback

def TA_MININDEX(*args):
  return _TaLib.TA_MININDEX(*args)
TA_MININDEX = _TaLib.TA_MININDEX

def TA_MININDEX_Lookback(*args):
  return _TaLib.TA_MININDEX_Lookback(*args)
TA_MININDEX_Lookback = _TaLib.TA_MININDEX_Lookback

def TA_MINMAX(*args):
  return _TaLib.TA_MINMAX(*args)
TA_MINMAX = _TaLib.TA_MINMAX

def TA_MINMAX_Lookback(*args):
  return _TaLib.TA_MINMAX_Lookback(*args)
TA_MINMAX_Lookback = _TaLib.TA_MINMAX_Lookback

def TA_MINMAXINDEX(*args):
  return _TaLib.TA_MINMAXINDEX(*args)
TA_MINMAXINDEX = _TaLib.TA_MINMAXINDEX

def TA_MINMAXINDEX_Lookback(*args):
  return _TaLib.TA_MINMAXINDEX_Lookback(*args)
TA_MINMAXINDEX_Lookback = _TaLib.TA_MINMAXINDEX_Lookback

def TA_MINUS_DI(*args):
  return _TaLib.TA_MINUS_DI(*args)
TA_MINUS_DI = _TaLib.TA_MINUS_DI

def TA_MINUS_DI_Lookback(*args):
  return _TaLib.TA_MINUS_DI_Lookback(*args)
TA_MINUS_DI_Lookback = _TaLib.TA_MINUS_DI_Lookback

def TA_MINUS_DM(*args):
  return _TaLib.TA_MINUS_DM(*args)
TA_MINUS_DM = _TaLib.TA_MINUS_DM

def TA_MINUS_DM_Lookback(*args):
  return _TaLib.TA_MINUS_DM_Lookback(*args)
TA_MINUS_DM_Lookback = _TaLib.TA_MINUS_DM_Lookback

def TA_MOM(*args):
  return _TaLib.TA_MOM(*args)
TA_MOM = _TaLib.TA_MOM

def TA_MOM_Lookback(*args):
  return _TaLib.TA_MOM_Lookback(*args)
TA_MOM_Lookback = _TaLib.TA_MOM_Lookback

def TA_MULT(*args):
  return _TaLib.TA_MULT(*args)
TA_MULT = _TaLib.TA_MULT

def TA_MULT_Lookback():
  return _TaLib.TA_MULT_Lookback()
TA_MULT_Lookback = _TaLib.TA_MULT_Lookback

def TA_NATR(*args):
  return _TaLib.TA_NATR(*args)
TA_NATR = _TaLib.TA_NATR

def TA_NATR_Lookback(*args):
  return _TaLib.TA_NATR_Lookback(*args)
TA_NATR_Lookback = _TaLib.TA_NATR_Lookback

def TA_OBV(*args):
  return _TaLib.TA_OBV(*args)
TA_OBV = _TaLib.TA_OBV

def TA_OBV_Lookback():
  return _TaLib.TA_OBV_Lookback()
TA_OBV_Lookback = _TaLib.TA_OBV_Lookback

def TA_PLUS_DI(*args):
  return _TaLib.TA_PLUS_DI(*args)
TA_PLUS_DI = _TaLib.TA_PLUS_DI

def TA_PLUS_DI_Lookback(*args):
  return _TaLib.TA_PLUS_DI_Lookback(*args)
TA_PLUS_DI_Lookback = _TaLib.TA_PLUS_DI_Lookback

def TA_PLUS_DM(*args):
  return _TaLib.TA_PLUS_DM(*args)
TA_PLUS_DM = _TaLib.TA_PLUS_DM

def TA_PLUS_DM_Lookback(*args):
  return _TaLib.TA_PLUS_DM_Lookback(*args)
TA_PLUS_DM_Lookback = _TaLib.TA_PLUS_DM_Lookback

def TA_PPO(*args):
  return _TaLib.TA_PPO(*args)
TA_PPO = _TaLib.TA_PPO

def TA_PPO_Lookback(*args):
  return _TaLib.TA_PPO_Lookback(*args)
TA_PPO_Lookback = _TaLib.TA_PPO_Lookback

def TA_ROC(*args):
  return _TaLib.TA_ROC(*args)
TA_ROC = _TaLib.TA_ROC

def TA_ROC_Lookback(*args):
  return _TaLib.TA_ROC_Lookback(*args)
TA_ROC_Lookback = _TaLib.TA_ROC_Lookback

def TA_ROCP(*args):
  return _TaLib.TA_ROCP(*args)
TA_ROCP = _TaLib.TA_ROCP

def TA_ROCP_Lookback(*args):
  return _TaLib.TA_ROCP_Lookback(*args)
TA_ROCP_Lookback = _TaLib.TA_ROCP_Lookback

def TA_ROCR(*args):
  return _TaLib.TA_ROCR(*args)
TA_ROCR = _TaLib.TA_ROCR

def TA_ROCR_Lookback(*args):
  return _TaLib.TA_ROCR_Lookback(*args)
TA_ROCR_Lookback = _TaLib.TA_ROCR_Lookback

def TA_ROCR100(*args):
  return _TaLib.TA_ROCR100(*args)
TA_ROCR100 = _TaLib.TA_ROCR100

def TA_ROCR100_Lookback(*args):
  return _TaLib.TA_ROCR100_Lookback(*args)
TA_ROCR100_Lookback = _TaLib.TA_ROCR100_Lookback

def TA_RSI(*args):
  return _TaLib.TA_RSI(*args)
TA_RSI = _TaLib.TA_RSI

def TA_RSI_Lookback(*args):
  return _TaLib.TA_RSI_Lookback(*args)
TA_RSI_Lookback = _TaLib.TA_RSI_Lookback

def TA_SAR(*args):
  return _TaLib.TA_SAR(*args)
TA_SAR = _TaLib.TA_SAR

def TA_SAR_Lookback(*args):
  return _TaLib.TA_SAR_Lookback(*args)
TA_SAR_Lookback = _TaLib.TA_SAR_Lookback

def TA_SAREXT(*args):
  return _TaLib.TA_SAREXT(*args)
TA_SAREXT = _TaLib.TA_SAREXT

def TA_SAREXT_Lookback(*args):
  return _TaLib.TA_SAREXT_Lookback(*args)
TA_SAREXT_Lookback = _TaLib.TA_SAREXT_Lookback

def TA_SIN(*args):
  return _TaLib.TA_SIN(*args)
TA_SIN = _TaLib.TA_SIN

def TA_SIN_Lookback():
  return _TaLib.TA_SIN_Lookback()
TA_SIN_Lookback = _TaLib.TA_SIN_Lookback

def TA_SINH(*args):
  return _TaLib.TA_SINH(*args)
TA_SINH = _TaLib.TA_SINH

def TA_SINH_Lookback():
  return _TaLib.TA_SINH_Lookback()
TA_SINH_Lookback = _TaLib.TA_SINH_Lookback

def TA_SMA(*args):
  return _TaLib.TA_SMA(*args)
TA_SMA = _TaLib.TA_SMA

def TA_SMA_Lookback(*args):
  return _TaLib.TA_SMA_Lookback(*args)
TA_SMA_Lookback = _TaLib.TA_SMA_Lookback

def TA_SQRT(*args):
  return _TaLib.TA_SQRT(*args)
TA_SQRT = _TaLib.TA_SQRT

def TA_SQRT_Lookback():
  return _TaLib.TA_SQRT_Lookback()
TA_SQRT_Lookback = _TaLib.TA_SQRT_Lookback

def TA_STDDEV(*args):
  return _TaLib.TA_STDDEV(*args)
TA_STDDEV = _TaLib.TA_STDDEV

def TA_STDDEV_Lookback(*args):
  return _TaLib.TA_STDDEV_Lookback(*args)
TA_STDDEV_Lookback = _TaLib.TA_STDDEV_Lookback

def TA_STOCH(*args):
  return _TaLib.TA_STOCH(*args)
TA_STOCH = _TaLib.TA_STOCH

def TA_STOCH_Lookback(*args):
  return _TaLib.TA_STOCH_Lookback(*args)
TA_STOCH_Lookback = _TaLib.TA_STOCH_Lookback

def TA_STOCHF(*args):
  return _TaLib.TA_STOCHF(*args)
TA_STOCHF = _TaLib.TA_STOCHF

def TA_STOCHF_Lookback(*args):
  return _TaLib.TA_STOCHF_Lookback(*args)
TA_STOCHF_Lookback = _TaLib.TA_STOCHF_Lookback

def TA_STOCHRSI(*args):
  return _TaLib.TA_STOCHRSI(*args)
TA_STOCHRSI = _TaLib.TA_STOCHRSI

def TA_STOCHRSI_Lookback(*args):
  return _TaLib.TA_STOCHRSI_Lookback(*args)
TA_STOCHRSI_Lookback = _TaLib.TA_STOCHRSI_Lookback

def TA_SUB(*args):
  return _TaLib.TA_SUB(*args)
TA_SUB = _TaLib.TA_SUB

def TA_SUB_Lookback():
  return _TaLib.TA_SUB_Lookback()
TA_SUB_Lookback = _TaLib.TA_SUB_Lookback

def TA_SUM(*args):
  return _TaLib.TA_SUM(*args)
TA_SUM = _TaLib.TA_SUM

def TA_SUM_Lookback(*args):
  return _TaLib.TA_SUM_Lookback(*args)
TA_SUM_Lookback = _TaLib.TA_SUM_Lookback

def TA_T3(*args):
  return _TaLib.TA_T3(*args)
TA_T3 = _TaLib.TA_T3

def TA_T3_Lookback(*args):
  return _TaLib.TA_T3_Lookback(*args)
TA_T3_Lookback = _TaLib.TA_T3_Lookback

def TA_TAN(*args):
  return _TaLib.TA_TAN(*args)
TA_TAN = _TaLib.TA_TAN

def TA_TAN_Lookback():
  return _TaLib.TA_TAN_Lookback()
TA_TAN_Lookback = _TaLib.TA_TAN_Lookback

def TA_TANH(*args):
  return _TaLib.TA_TANH(*args)
TA_TANH = _TaLib.TA_TANH

def TA_TANH_Lookback():
  return _TaLib.TA_TANH_Lookback()
TA_TANH_Lookback = _TaLib.TA_TANH_Lookback

def TA_TEMA(*args):
  return _TaLib.TA_TEMA(*args)
TA_TEMA = _TaLib.TA_TEMA

def TA_TEMA_Lookback(*args):
  return _TaLib.TA_TEMA_Lookback(*args)
TA_TEMA_Lookback = _TaLib.TA_TEMA_Lookback

def TA_TRANGE(*args):
  return _TaLib.TA_TRANGE(*args)
TA_TRANGE = _TaLib.TA_TRANGE

def TA_TRANGE_Lookback():
  return _TaLib.TA_TRANGE_Lookback()
TA_TRANGE_Lookback = _TaLib.TA_TRANGE_Lookback

def TA_TRIMA(*args):
  return _TaLib.TA_TRIMA(*args)
TA_TRIMA = _TaLib.TA_TRIMA

def TA_TRIMA_Lookback(*args):
  return _TaLib.TA_TRIMA_Lookback(*args)
TA_TRIMA_Lookback = _TaLib.TA_TRIMA_Lookback

def TA_TRIX(*args):
  return _TaLib.TA_TRIX(*args)
TA_TRIX = _TaLib.TA_TRIX

def TA_TRIX_Lookback(*args):
  return _TaLib.TA_TRIX_Lookback(*args)
TA_TRIX_Lookback = _TaLib.TA_TRIX_Lookback

def TA_TSF(*args):
  return _TaLib.TA_TSF(*args)
TA_TSF = _TaLib.TA_TSF

def TA_TSF_Lookback(*args):
  return _TaLib.TA_TSF_Lookback(*args)
TA_TSF_Lookback = _TaLib.TA_TSF_Lookback

def TA_TYPPRICE(*args):
  return _TaLib.TA_TYPPRICE(*args)
TA_TYPPRICE = _TaLib.TA_TYPPRICE

def TA_TYPPRICE_Lookback():
  return _TaLib.TA_TYPPRICE_Lookback()
TA_TYPPRICE_Lookback = _TaLib.TA_TYPPRICE_Lookback

def TA_ULTOSC(*args):
  return _TaLib.TA_ULTOSC(*args)
TA_ULTOSC = _TaLib.TA_ULTOSC

def TA_ULTOSC_Lookback(*args):
  return _TaLib.TA_ULTOSC_Lookback(*args)
TA_ULTOSC_Lookback = _TaLib.TA_ULTOSC_Lookback

def TA_VAR(*args):
  return _TaLib.TA_VAR(*args)
TA_VAR = _TaLib.TA_VAR

def TA_VAR_Lookback(*args):
  return _TaLib.TA_VAR_Lookback(*args)
TA_VAR_Lookback = _TaLib.TA_VAR_Lookback

def TA_WCLPRICE(*args):
  return _TaLib.TA_WCLPRICE(*args)
TA_WCLPRICE = _TaLib.TA_WCLPRICE

def TA_WCLPRICE_Lookback():
  return _TaLib.TA_WCLPRICE_Lookback()
TA_WCLPRICE_Lookback = _TaLib.TA_WCLPRICE_Lookback

def TA_WILLR(*args):
  return _TaLib.TA_WILLR(*args)
TA_WILLR = _TaLib.TA_WILLR

def TA_WILLR_Lookback(*args):
  return _TaLib.TA_WILLR_Lookback(*args)
TA_WILLR_Lookback = _TaLib.TA_WILLR_Lookback

def TA_WMA(*args):
  return _TaLib.TA_WMA(*args)
TA_WMA = _TaLib.TA_WMA

def TA_WMA_Lookback(*args):
  return _TaLib.TA_WMA_Lookback(*args)
TA_WMA_Lookback = _TaLib.TA_WMA_Lookback

def TA_SetUnstablePeriod(*args):
  return _TaLib.TA_SetUnstablePeriod(*args)
TA_SetUnstablePeriod = _TaLib.TA_SetUnstablePeriod

def TA_GetUnstablePeriod(*args):
  return _TaLib.TA_GetUnstablePeriod(*args)
TA_GetUnstablePeriod = _TaLib.TA_GetUnstablePeriod

def TA_SetCompatibility(*args):
  return _TaLib.TA_SetCompatibility(*args)
TA_SetCompatibility = _TaLib.TA_SetCompatibility

def TA_GetCompatibility():
  return _TaLib.TA_GetCompatibility()
TA_GetCompatibility = _TaLib.TA_GetCompatibility

def TA_SetCandleSettings(*args):
  return _TaLib.TA_SetCandleSettings(*args)
TA_SetCandleSettings = _TaLib.TA_SetCandleSettings

def TA_RestoreCandleDefaultSettings(*args):
  return _TaLib.TA_RestoreCandleDefaultSettings(*args)
TA_RestoreCandleDefaultSettings = _TaLib.TA_RestoreCandleDefaultSettings
class TA_FuncHandle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
TA_FuncHandle_swigregister = _TaLib.TA_FuncHandle_swigregister
TA_FuncHandle_swigregister(TA_FuncHandle)


def TA_GroupTable(*args):
  return _TaLib.TA_GroupTable(*args)
TA_GroupTable = _TaLib.TA_GroupTable

def TA_FuncTable(*args):
  return _TaLib.TA_FuncTable(*args)
TA_FuncTable = _TaLib.TA_FuncTable

def TA_GetFuncHandle(*args):
  return _TaLib.TA_GetFuncHandle(*args)
TA_GetFuncHandle = _TaLib.TA_GetFuncHandle
TA_FUNC_FLG_OVERLAP = _TaLib.TA_FUNC_FLG_OVERLAP
TA_FUNC_FLG_VOLUME = _TaLib.TA_FUNC_FLG_VOLUME
TA_FUNC_FLG_UNST_PER = _TaLib.TA_FUNC_FLG_UNST_PER
TA_FUNC_FLG_CANDLESTICK = _TaLib.TA_FUNC_FLG_CANDLESTICK
class TA_FuncInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    name = _swig_property(_TaLib.TA_FuncInfo_name_get)
    group = _swig_property(_TaLib.TA_FuncInfo_group_get)
    hint = _swig_property(_TaLib.TA_FuncInfo_hint_get)
    camelCaseName = _swig_property(_TaLib.TA_FuncInfo_camelCaseName_get)
    flags = _swig_property(_TaLib.TA_FuncInfo_flags_get)
    nbInput = _swig_property(_TaLib.TA_FuncInfo_nbInput_get)
    nbOptInput = _swig_property(_TaLib.TA_FuncInfo_nbOptInput_get)
    nbOutput = _swig_property(_TaLib.TA_FuncInfo_nbOutput_get)
    handle = _swig_property(_TaLib.TA_FuncInfo_handle_get)
TA_FuncInfo_swigregister = _TaLib.TA_FuncInfo_swigregister
TA_FuncInfo_swigregister(TA_FuncInfo)


def TA_GetFuncInfo(*args):
  return _TaLib.TA_GetFuncInfo(*args)
TA_GetFuncInfo = _TaLib.TA_GetFuncInfo
class TA_RealRange(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    min = _swig_property(_TaLib.TA_RealRange_min_get)
    max = _swig_property(_TaLib.TA_RealRange_max_get)
    precision = _swig_property(_TaLib.TA_RealRange_precision_get)
    suggested_start = _swig_property(_TaLib.TA_RealRange_suggested_start_get)
    suggested_end = _swig_property(_TaLib.TA_RealRange_suggested_end_get)
    suggested_increment = _swig_property(_TaLib.TA_RealRange_suggested_increment_get)
TA_RealRange_swigregister = _TaLib.TA_RealRange_swigregister
TA_RealRange_swigregister(TA_RealRange)

class TA_IntegerRange(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    min = _swig_property(_TaLib.TA_IntegerRange_min_get)
    max = _swig_property(_TaLib.TA_IntegerRange_max_get)
    suggested_start = _swig_property(_TaLib.TA_IntegerRange_suggested_start_get)
    suggested_end = _swig_property(_TaLib.TA_IntegerRange_suggested_end_get)
    suggested_increment = _swig_property(_TaLib.TA_IntegerRange_suggested_increment_get)
TA_IntegerRange_swigregister = _TaLib.TA_IntegerRange_swigregister
TA_IntegerRange_swigregister(TA_IntegerRange)

class TA_RealDataPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    value = _swig_property(_TaLib.TA_RealDataPair_value_get)
    string = _swig_property(_TaLib.TA_RealDataPair_string_get)
TA_RealDataPair_swigregister = _TaLib.TA_RealDataPair_swigregister
TA_RealDataPair_swigregister(TA_RealDataPair)

class TA_IntegerDataPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    value = _swig_property(_TaLib.TA_IntegerDataPair_value_get)
    string = _swig_property(_TaLib.TA_IntegerDataPair_string_get)
TA_IntegerDataPair_swigregister = _TaLib.TA_IntegerDataPair_swigregister
TA_IntegerDataPair_swigregister(TA_IntegerDataPair)

class TA_RealList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    data = _swig_property(_TaLib.TA_RealList_data_get)
    nbElement = _swig_property(_TaLib.TA_RealList_nbElement_get)
TA_RealList_swigregister = _TaLib.TA_RealList_swigregister
TA_RealList_swigregister(TA_RealList)

class TA_IntegerList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    data = _swig_property(_TaLib.TA_IntegerList_data_get)
    nbElement = _swig_property(_TaLib.TA_IntegerList_nbElement_get)
TA_IntegerList_swigregister = _TaLib.TA_IntegerList_swigregister
TA_IntegerList_swigregister(TA_IntegerList)

TA_Input_Price = _TaLib.TA_Input_Price
TA_Input_Real = _TaLib.TA_Input_Real
TA_Input_Integer = _TaLib.TA_Input_Integer
TA_OptInput_RealRange = _TaLib.TA_OptInput_RealRange
TA_OptInput_RealList = _TaLib.TA_OptInput_RealList
TA_OptInput_IntegerRange = _TaLib.TA_OptInput_IntegerRange
TA_OptInput_IntegerList = _TaLib.TA_OptInput_IntegerList
TA_Output_Real = _TaLib.TA_Output_Real
TA_Output_Integer = _TaLib.TA_Output_Integer
TA_IN_PRICE_OPEN = _TaLib.TA_IN_PRICE_OPEN
TA_IN_PRICE_HIGH = _TaLib.TA_IN_PRICE_HIGH
TA_IN_PRICE_LOW = _TaLib.TA_IN_PRICE_LOW
TA_IN_PRICE_CLOSE = _TaLib.TA_IN_PRICE_CLOSE
TA_IN_PRICE_VOLUME = _TaLib.TA_IN_PRICE_VOLUME
TA_IN_PRICE_OPENINTEREST = _TaLib.TA_IN_PRICE_OPENINTEREST
TA_IN_PRICE_TIMESTAMP = _TaLib.TA_IN_PRICE_TIMESTAMP
TA_OPTIN_IS_PERCENT = _TaLib.TA_OPTIN_IS_PERCENT
TA_OPTIN_IS_DEGREE = _TaLib.TA_OPTIN_IS_DEGREE
TA_OPTIN_IS_CURRENCY = _TaLib.TA_OPTIN_IS_CURRENCY
TA_OPTIN_ADVANCED = _TaLib.TA_OPTIN_ADVANCED
TA_OUT_LINE = _TaLib.TA_OUT_LINE
TA_OUT_DOT_LINE = _TaLib.TA_OUT_DOT_LINE
TA_OUT_DASH_LINE = _TaLib.TA_OUT_DASH_LINE
TA_OUT_DOT = _TaLib.TA_OUT_DOT
TA_OUT_HISTO = _TaLib.TA_OUT_HISTO
TA_OUT_PATTERN_BOOL = _TaLib.TA_OUT_PATTERN_BOOL
TA_OUT_PATTERN_BULL_BEAR = _TaLib.TA_OUT_PATTERN_BULL_BEAR
TA_OUT_PATTERN_STRENGTH = _TaLib.TA_OUT_PATTERN_STRENGTH
TA_OUT_POSITIVE = _TaLib.TA_OUT_POSITIVE
TA_OUT_NEGATIVE = _TaLib.TA_OUT_NEGATIVE
TA_OUT_ZERO = _TaLib.TA_OUT_ZERO
TA_OUT_UPPER_LIMIT = _TaLib.TA_OUT_UPPER_LIMIT
TA_OUT_LOWER_LIMIT = _TaLib.TA_OUT_LOWER_LIMIT
class TA_InputParameterInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    type = _swig_property(_TaLib.TA_InputParameterInfo_type_get)
    paramName = _swig_property(_TaLib.TA_InputParameterInfo_paramName_get)
    flags = _swig_property(_TaLib.TA_InputParameterInfo_flags_get)
TA_InputParameterInfo_swigregister = _TaLib.TA_InputParameterInfo_swigregister
TA_InputParameterInfo_swigregister(TA_InputParameterInfo)

class TA_OptInputParameterInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    type = _swig_property(_TaLib.TA_OptInputParameterInfo_type_get)
    paramName = _swig_property(_TaLib.TA_OptInputParameterInfo_paramName_get)
    flags = _swig_property(_TaLib.TA_OptInputParameterInfo_flags_get)
    displayName = _swig_property(_TaLib.TA_OptInputParameterInfo_displayName_get)
    dataSet = _swig_property(_TaLib.TA_OptInputParameterInfo_dataSet_get)
    defaultValue = _swig_property(_TaLib.TA_OptInputParameterInfo_defaultValue_get)
    hint = _swig_property(_TaLib.TA_OptInputParameterInfo_hint_get)
    helpFile = _swig_property(_TaLib.TA_OptInputParameterInfo_helpFile_get, _TaLib.TA_OptInputParameterInfo_helpFile_set)
TA_OptInputParameterInfo_swigregister = _TaLib.TA_OptInputParameterInfo_swigregister
TA_OptInputParameterInfo_swigregister(TA_OptInputParameterInfo)

class TA_OutputParameterInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    type = _swig_property(_TaLib.TA_OutputParameterInfo_type_get)
    paramName = _swig_property(_TaLib.TA_OutputParameterInfo_paramName_get)
    flags = _swig_property(_TaLib.TA_OutputParameterInfo_flags_get)
TA_OutputParameterInfo_swigregister = _TaLib.TA_OutputParameterInfo_swigregister
TA_OutputParameterInfo_swigregister(TA_OutputParameterInfo)


def TA_GetInputParameterInfo(*args):
  return _TaLib.TA_GetInputParameterInfo(*args)
TA_GetInputParameterInfo = _TaLib.TA_GetInputParameterInfo

def TA_GetOptInputParameterInfo(*args):
  return _TaLib.TA_GetOptInputParameterInfo(*args)
TA_GetOptInputParameterInfo = _TaLib.TA_GetOptInputParameterInfo

def TA_GetOutputParameterInfo(*args):
  return _TaLib.TA_GetOutputParameterInfo(*args)
TA_GetOutputParameterInfo = _TaLib.TA_GetOutputParameterInfo

def TA_FunctionDescriptionXML():
  return _TaLib.TA_FunctionDescriptionXML()
TA_FunctionDescriptionXML = _TaLib.TA_FunctionDescriptionXML


# This python snippet is appended to the python module generated by SWIG
# customizing and extending its functionality


import re

# For ta_common

# TA_RetCodeInfo constructor can accept optional parameter

TA_RetCodeInfo.swig_init = TA_RetCodeInfo.__init__

def _temp_(self, code = 0):
    TA_RetCodeInfo.swig_init(self)
    TA_SetRetCodeInfo(code, self)

TA_RetCodeInfo.__init__ = _temp_




# parameter TA_Initialize is optional
# TA_Initialize protects itself against multiple calls

_initialized = False

def TA_Initialize():
    global _initialized
    if ( _initialized ):
        retCode = TA_Shutdown()
        if ( retCode != TA_SUCCESS ):
            return retCode

    retCode = _TaLib.TA_Initialize()
    _initialized = (retCode == TA_SUCCESS)
    return retCode



def TA_Shutdown():
    global _initialized
    if ( _initialized ):
        _initialized = False
        return _TaLib.TA_Shutdown()
    else:
        # We are more forgiving on multiple calls to TA_Shutdown
        # than TA-LIB on TA_Shutdown()
        return TA_SUCCESS




# A way to automatically initialize and shutdown

class TA_Initialization:
    def __init__( self ):
        TA_Initialize()

    def __del__(self):
        TA_Shutdown()

# a singleton object
_initialization_object = TA_Initialization()
